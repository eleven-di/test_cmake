name: Android Cross-Compile

on: [push, pull_request]

jobs:
  build-android:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        abi: [arm64-v8a, armeabi-v7a]
    container:
      image: silkeh/clang:android
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set environment variables
      run: |
        echo "ANDROID_NDK_ROOT=/usr/local/android-ndk" >> $GITHUB_ENV
        echo "PATH=$PATH:/usr/local/android-ndk" >> $GITHUB_ENV
        
    - name: Configure and Build
      run: |
        mkdir build && cd build
        
        if [ "${{ matrix.abi }}" = "arm64-v8a" ]; then
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${{ matrix.abi }} \
            -DANDROID_PLATFORM=android-21 \
            -DSTATIC_LIB_PATH=../jni/static-libs/arm64-v8a
        else
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${{ matrix.abi }} \
            -DANDROID_PLATFORM=android-16 \
            -DSTATIC_LIB_PATH=../jni/static-libs/armeabi-v7a
        fi
        
        cmake --build . -- -j$(nproc)

    - name: Collect artifacts
      run: |
        mkdir -p artifacts/${{ matrix.abi }}
        find build -name '*.so' -exec cp {} artifacts/${{ matrix.abi }} \;
        cp -r jni/include artifacts/
        cp -r jni/static-libs artifacts/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-libs
        path: artifacts