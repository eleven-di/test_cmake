name: Android Cross-Compile

on: [push, pull_request]

jobs:
  build-android:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        abi: [arm64-v8a, armeabi-v7a]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # 关键修复：设置 JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'

    # 修复：使用手动 NDK 安装方式
    - name: Setup Android NDK
      run: |
        # 创建 Android SDK 目录
        mkdir -p $HOME/android-sdk
        
        # 下载命令行工具
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
        unzip -q cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        
        # 设置环境变量
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        
        # 接受许可
        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        
        # 安装指定版本的 NDK
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "ndk;25.2.9519653"
        echo "ANDROID_NDK_ROOT=$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_ENV

    - name: Set up build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        
        # 根据 ABI 选择配置
        if [ "${{ matrix.abi }}" = "arm64-v8a" ]; then
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${{ matrix.abi }} \
            -DANDROID_NDK=$ANDROID_NDK_ROOT \
            -DANDROID_PLATFORM=android-21 \
            -DSTATIC_LIB_PATH=../jni/static-libs/arm64-v8a
        else
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${{ matrix.abi }} \
            -DANDROID_NDK=$ANDROID_NDK_ROOT \
            -DANDROID_PLATFORM=android-16 \
            -DSTATIC_LIB_PATH=../jni/static-libs/armeabi-v7a
        fi

    - name: Build project
      run: |
        cd build
        cmake --build . --target native-lib -- -j $(nproc)

    - name: Collect artifacts
      run: |
        mkdir -p artifacts/${{ matrix.abi }}
        find build -name '*.so' -exec cp {} artifacts/${{ matrix.abi }} \;
        cp -r jni/include artifacts/
        cp -r jni/static-libs artifacts/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-libs
        path: artifacts